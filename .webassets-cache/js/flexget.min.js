(function(){'use strict';var app=angular.module('flexget',['ui.router','ngMaterial','ngCookies','flexget.services']);function bootstrapApplication(){angular.element(document).ready(function(){angular.bootstrap(document,['flexget']);});window.loading_screen.finish();}
app.config(function($mdThemingProvider,$mdIconProvider){$mdIconProvider.fontSet('fa','fa');$mdThemingProvider.theme('default').primaryPalette('orange').accentPalette('light-blue').warnPalette('red');});angular.module('flexget.services',[]);bootstrapApplication();})();'use strict';String.prototype.startsWith=function(prefix){return this.indexOf(prefix)===0;};function registerModule(module){angular.module('flexget').requires.push(module.name);}
(function(){'use strict';angular.module('flexget.services').factory('toolBar',function(){var items=[{type:'menu',label:'Manage',cssClass:'fa fa-cog',items:[],width:2,order:255}];var defaultOrder=128;var getMenu=function(menu){for(var i=0,len=items.length;i<len;i++){var item=items[i];if(item.type=='menu'&&item.label==menu){return item;}}};return{items:items,registerButton:function(label,cssClass,action,order){if(!order){order=defaultOrder;}
items.push({type:'button',label:label,cssClass:cssClass,action:action,order:order});},registerMenu:function(label,cssClass,width,order){var existingMenu=getMenu(label);if(!existingMenu){if(!order){order=defaultOrder;}
if(!width){width=2;}
items.push({type:'menu',label:label,cssClass:cssClass,items:[],width:2,order:order});}},registerMenuItem:function(menu,label,cssClass,action,order){if(!order){order=defaultOrder;}
menu=getMenu(menu);if(menu){menu.items.push({label:label,cssClass:cssClass,action:action,order:order});}else{throw'Unable to register menu item '+label+' as Menu '+menu+' was not found';}}}});})();(function(){'use strict';angular.module('flexget.services').service('modal',['$modal',function($modal){var defaultOptions={backdrop:true,keyboard:true,modalFade:true,size:'md',templateUrl:'/ui/static/partials/modal.html',headerText:'Proceed?',bodyText:'Perform this action?',okText:'Ok',okType:'primary',closeText:'Cancel',closeType:'default'};this.showModal=function(options){var tempOptions={};angular.extend(tempOptions,defaultOptions,options);if(!tempOptions.controller){tempOptions.controller=function($scope,$modalInstance){$scope.modalOptions=tempOptions;$scope.ok=function(result){$modalInstance.close(result);};$scope.close=function(result){$modalInstance.dismiss('cancel');};}}
return $modal.open(tempOptions).result;};}]);})();(function(){'use strict';angular.module('flexget').run(function($rootScope,$mdSidenav,$mdMedia){$rootScope.toggleNav=function(){if($mdSidenav('left').isLockedOpen()){$rootScope.menuMini=!$rootScope.menuMini;}else{$rootScope.menuMini=false;$mdSidenav('left').toggle();}};$rootScope.closeNav=function($event){if(!$mdMedia('gt-lg')){$mdSidenav('left').close();}};});angular.module('flexget.services').factory('sideNav',function(){var items=[];return{register:function(href,caption,icon,order){href='/ui/#'+href;items.push({href:href,caption:caption,icon:icon,order:order})},items:items}});})();(function(){'use strict';angular.module('flexget.services').provider('route',function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){var $state=$injector.get("$state");$state.go("home");});this.$get=function(){return{register:function(name,url,controller,template){$stateProvider.state(name,{url:url,templateUrl:template,controller:controller});}}}})})();(function(){'use strict';angular.module('flexget.services').service('tasks',function($rootScope,$http){this.list=function(){return $http.get('/api/tasks/').then(function(response){var tasks=[];angular.forEach(response.data.tasks,function(task){this.push(task.name);},tasks);return tasks},function(httpError){throw httpError.status+" : "+httpError.data;});};this.executeStream=function(tasks){var stream=oboe({url:'/api/execution/execute/stream/?progress=true&log=true&summary=true&entry_dump=true',method:'POST',body:{tasks:tasks}});var on=function(event,pattern,callback){var wrappedCallback=function(){var args=arguments;return $rootScope.$evalAsync(function(){return callback.apply(stream,args);});};if(pattern){stream.on(event,pattern,wrappedCallback);}else{stream.on(event,wrappedCallback)}
return executeWrapper;};var executeWrapper={start:function(callback){return on('start',null,callback);},tasks:function(callback){return on('node','tasks',callback);},log:function(callback){return on('node','log',callback);},progress:function(callback){var wrappedCallback=function(data){var taskId=Object.keys(data)[0];return callback(taskId,data[taskId])};return on('node','progress',wrappedCallback);},summary:function(callback){var wrappedCallback=function(data){var taskId=Object.keys(data)[0];return callback(taskId,data[taskId])};return on('node','summary',wrappedCallback);},entry_dump:function(callback){var wrappedCallback=function(data){var taskId=Object.keys(data)[0];return callback(taskId,data[taskId])};return on('node','entry_dump',wrappedCallback);},done:function(callback){return on('done',null,callback);},error:function(callback){return on('fail',null,callback);},abort:function(){stream.abort()}};return executeWrapper;};this.update=function(){};this.add=function(){};this.delete=function(){};})})();(function(){'use strict';var services=angular.module('flexget.services');services.factory('authService',function($state,$cookies,$http,$q){var loggedIn,prevState,prevParams;loggedIn=false;return{loggedIn:function(){var def=$q.defer();if(loggedIn){def.resolve(loggedIn);}else{$http.get("/api/server/version/").success(function(){def.resolve();}).error(function(data){def.reject()})}
return def.promise;},login:function(username,password,remember){if(!remember){remember=false;}
return $http.post('/api/login/?remember='+remember,{username:username,password:password}).success(function(){loggedIn=true;if(prevState){$state.go(prevState,prevParams);}else{$state.go('home');}})},state:function(state,params){prevState=state;prevParams=params;}}});services.run(['$rootScope','$state','authService',function($rootScope,$state,authService){$rootScope.$on('$stateChangeStart',function(event,toState,toParams){if(toState.name=="login"){return}
authService.loggedIn().then(function(loggedIn){},function(){event.preventDefault();authService.state(toState,toParams);$rootScope.$broadcast('event:auth-loginRequired',false);});});}]);services.config(['$httpProvider',function($httpProvider){$httpProvider.interceptors.push(['$rootScope','$q','$injector',function($rootScope,$q,$injector){var loginRequired=function(){var stateService=$injector.get('$state');var authService=$injector.get('authService');authService.state(stateService.current,stateService.params);$rootScope.$broadcast('event:auth-loginRequired',true);};return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule){switch(rejection.status){case 401:loginRequired();break;case 403:loginRequired();break;}}
return $q.reject(rejection);}};}]);}]);})();(function(){'use strict';angular.module('flexget').directive('toolBar',function(toolBar){var template='<div class="admin-toolbar">'+'<md-toolbar class="admin-toolbar">'+'<div class="md-toolbar-tools">'+'<md-button class="md-icon-button" ng-click="toggleNav()" style="width: 40px">'+'<md-icon class="fa fa-bars" aria-label="Menu"></md-icon>'+'</md-button>'+'<span flex></span>'+'<div ng-repeat="item in toolBarItems | orderBy:\'order\'">'+'<md-button aria-label="{{ item.label }}" class="md-icon-button" ng-click="item.action()" ng-if="item.type == \'button\'">'+'<md-tooltip>{{ item.label }}</md-tooltip>'+'<md-icon md-menu-origin class="{{ item.cssClass }}"></md-icon>'+'</md-button>'+'<md-menu ng-if="item.type == \'menu\'">'+'<md-button aria-label="{{ item.label }}" class="md-icon-button" ng-click="$mdOpenMenu($event)">'+'<md-tooltip>{{ item.label }}</md-tooltip>'+'<md-icon md-menu-origin class="{{ item.cssClass }}"></md-icon>'+'</md-button>'+'<md-menu-content width="{{ item.width }}">'+'<md-menu-item ng-repeat="menuItem in item.items | orderBy:\'order\'">'+'<md-button ng-click="menuItem.action()"><md-icon md-menu-origin class="{{ menuItem.cssClass }}"></md-icon>{{ menuItem.label }}</md-button>'+'</md-menu-item>'+'</md-menu-content>'+'</md-menu>'+'</div>'+'</div>'+'</md-toolbar>'+'</div>';return{restrict:'E',replace:'true',template:template,link:function(scope,element,attrs){scope.toolBarItems=toolBar.items;}};});})();(function(){'use strict';angular.module('flexget').directive('sideNav',function(sideNav){var template='<md-sidenav'+' layout="column" class="nav-menu md-sidenav-left md-sidenav-left md-whiteframe-z2" md-component-id="left" md-is-locked-open="$mdMedia(\'gt-lg\')">'+'<md-content layout="column" flex>'+'<md-list>'+'<md-list-item class="header">Menu</md-list-item>'+'<md-list-item ng-repeat="item in navItems">'+'<md-button href="{{ item.href }}" ng-click="closeNav()" flex>'+'<md-icon class="{{ item.icon }}"></md-icon>'+'{{ item.caption }}'+'</md-button>'+'</md-list-item>'+'</md-list>'+'</md-content>'+'</md-sidenav>';return{restrict:'E',replace:'true',template:template,link:function(scope,element,attrs){scope.navItems=sideNav.items;}};});})();(function(){'use strict';angular.module('flexget').directive('pageHeader',function(){return{restrict:'AE',replace:'true',template:'<section class="content-header"><h1>{{title }}<small>{{ description }}</small></h1></section>'};});})();