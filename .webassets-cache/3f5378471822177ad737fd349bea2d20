V(function(){'use strict';var executeModule=angular.module("executeModule",['ui.grid','ui.grid.autoResize','angular-spinkit','flexget.services']);registerModule(executeModule);executeModule.run(function(route,sideNav){route.register('execute','/execute','ExecuteCtrl','plugin/execute/static/index.html');sideNav.register('/execute','Execute','fa fa-cog',128);});executeModule.filter('executePhaseFilter',function(){var phaseDescriptions={input:"Gathering Entries",metainfo:"Figuring out meta data",filter:"Filtering Entries",download:"Downloading Accepted Entries",modify:"Modifying Entries",output:"Executing Outputs",exit:"Finished"};return function(phase){if(phase in phaseDescriptions){return phaseDescriptions[phase]}else{return"Processing"}};});executeModule.controller('ExecuteCtrl',function($scope,$log,tasks){var stream,allTasks=[];tasks.list().then(function(tasks){allTasks=tasks});$scope.executeTasks=[];$scope.searchText=[];$scope.queryTasks=function(query){var taskFilter=function(){var lowercaseQuery=angular.lowercase(query);return function filterFn(task){return(angular.lowercase(task).indexOf(lowercaseQuery)>-1);};};return query?allTasks.filter(taskFilter()):[];};$scope.clear=function(){$scope.stream=false;};$scope.run=function(){$scope.stream={tasks:[],log:[]};stream=tasks.executeStream($scope.executeTasks).start(function(){}).done(function(){$scope.stream.percent=100;}).tasks(function(tasks){angular.forEach(tasks,function(task){$scope.stream.tasks.push({id:task.id,status:'pending',name:task.name,entries:{},percent:0});});}).log(function(log){$scope.stream.log.push(log);}).progress(function(taskId,update){var task=getTask(taskId);angular.extend(task,update);updateProgress();}).summary(function(taskId,update){var task=getTask(taskId);angular.extend(task,update);updateProgress();}).entry_dump(function(taskId,entries){var task=getTask(taskId);task.entries=entries;});var getTask=function(taskId){for(var i=0;i<$scope.stream.tasks.length;i++){var task=$scope.stream.tasks[i];if(task.id==taskId){return task}}};var updateProgress=function(){var totalPercent=0;for(var i=0;i<$scope.stream.tasks.length;i++){totalPercent=totalPercent+$scope.stream.tasks[i].percent;}\u000a$scope.stream.percent=totalPercent/$scope.stream.tasks.length;}};$scope.$on("$destroy",function(){if(angular.isDefined(stream)){stream.abort();}});});})();(function(){'use strict';var userPlugin=angular.module('userPlugin',['ngCookies']);registerModule(userPlugin);userPlugin.run(function($state,toolBar,$http){toolBar.registerMenuItem('Manage','Profile','fa fa-user',function(){alert('not implemented yet')},100);});})();(function(){'use strict';angular.module('flexget.services').service('server',function($http){this.reload=function(){return $http.get('/api/server/reload/');};this.shutdown=function(){return $http.get('/api/server/shutdown/')};});var serverPlugin=angular.module("serverPlugin",[]);registerModule(serverPlugin);serverPlugin.run(function(toolBar,server,$mdDialog){var reload=function(){var reloadController=function($scope,$mdDialog){$scope.title='Reload Config';$scope.showCircular=true;$scope.content=null;$scope.buttons=[];$scope.ok=null;$scope.hide=function(){$mdDialog.hide();};var done=function(text){$scope.showCircular=false;$scope.content=text;$scope.ok='Close';};server.reload().success(function(){done('Reload Success');}).error(function(data,status,headers,config){done('Reload failed: '+data.error);});};$mdDialog.show({templateUrl:'static/partials/dialog_circular.html',parent:angular.element(document.body),controller:reloadController});};var doShutdown=function(){window.stop();var shutdownController=function($scope,$mdDialog){$scope.title='Shutting Down';$scope.showCircular=true;$scope.content=null;$scope.buttons=[];$scope.ok=null;$scope.hide=function(){$mdDialog.hide();};var done=function(text){$scope.title='Shutdown';$scope.showCircular=false;$scope.content=text;$scope.ok='Close';};server.shutdown().success(function(){done('Flexget has been shutdown');}).error(function(error){done('Flexget failed to shutdown failed: '+error.message);});};$mdDialog.show({templateUrl:'static/partials/dialog_circular.html',parent:angular.element(document.body),controller:shutdownController});};var shutdown=function(){$mdDialog.show($mdDialog.confirm().parent(angular.element(document.body)).title('Shutdown').content('Are you sure you want to shutdown Flexget?').ok('Shutdown').cancel('Cancel')).then(function(){doShutdown();});};toolBar.registerMenuItem('Manage','Reload','fa fa-refresh',reload);toolBar.registerMenuItem('Manage','Shutdown','fa fa-power-off',shutdown);});})();(function(){'use strict';var homeModule=angular.module("homeModule",['angular.filter']);registerModule(homeModule);homeModule.run(function(route){route.register('home','/home',null,'plugin/home/static/index.html');});})();(function(){'use strict';var historyModule=angular.module("historyModule",['angular.filter']);registerModule(historyModule);historyModule.run(function(route,sideNav){route.register('history','/history','HistoryCtrl','plugin/history/static/index.html');sideNav.register('/history','History','fa fa-history',128);});historyModule.controller('HistoryCtrl',function($scope,$http){$scope.title='History';$http.get('/api/history').success(function(data,status,headers,config){$scope.entries=data['items'];}).error(function(data,status,headers,config){});});})();(function(){'use strict';var scheduleModule=angular.module('scheduleModule',['schemaForm']);registerModule(scheduleModule);scheduleModule.run(function(route,sideNav){route.register('schedule','/schedule','SchedulesCtrl','plugin/schedule/static/index.html');sideNav.register('/schedule','Schedule','fa fa-calendar',128);});scheduleModule.controller('SchedulesCtrl',function($scope,$http){$scope.title='Schedules';$scope.description='Task execution';$scope.form=['*',{type:'submit',title:'Save'}];$scope.onSubmit=function(form){$scope.$broadcast('schemaFormValidate');if(form.$valid){alert('test');}};$http.get('/api/schema/config/schedules').success(function(data,status,headers,config){$scope.schema={type:'object','properties':{'schedules':data},required:['schedules']};}).error(function(data,status,headers,config){});$http.get('/api/schedules').success(function(data,status,headers,config){$scope.models=[data];}).error(function(data,status,headers,config){});});})();(function(){'use strict';var logViewModule=angular.module('logViewModule',['ui.grid','ui.grid.autoResize','ui.grid.autoScroll']);registerModule(logViewModule);logViewModule.run(function(route,sideNav,toolBar,$state){route.register('log','/log','LogViewCtrl','plugin/log/static/index.html');sideNav.register('/log','Log','fa fa-file-text-o',128);toolBar.registerButton('Log','fa fa-file-text-o',function(){$state.go('log')});});logViewModule.controller('LogViewCtrl',function($scope,$timeout,uiGridConstants){var filterTimeout,newDataTimeout;var logStream=false;$scope.status='Connecting';$scope.lines=400;$scope.search='';$scope.toggleStream=function(){if($scope.status=="Disconnected"){$scope.updateGrid();}else{abort();}};$scope.updateGrid=function(){if(angular.isDefined(filterTimeout)){$timeout.cancel(filterTimeout);}\u000afilterTimeout=$timeout(function(){getLogData()},1000);};var abort=function(){if(angular.isDefined(filterTimeout)){$timeout.cancel(filterTimeout);}\u000aif(typeof logStream!=='undefined'&&logStream){logStream.abort();logStream=false;$scope.status="Disconnected";}};var getLogData=function(){abort();$scope.status="Connecting";$scope.gridOptions.data=[];var queryParams='?lines='+$scope.lines;if($scope.search){queryParams=queryParams+'&search='+$scope.search;}\u000alogStream=oboe({url:'/api/server/log/'+queryParams}).start(function(){$scope.$applyAsync(function(){$scope.status="Streaming";});}).node('{message}',function(node){$scope.$applyAsync(function(){$scope.gridOptions.data.push(node);});}).fail(function(test){$scope.$applyAsync(function(){$scope.status="Disconnected";});})};var rowTemplate='<div class="{{ row.entity.levelname | lowercase }}"'+'ng-class="{summary: row.entity.message.startsWith(\u005c'Summary\u005c'), accepted: row.entity.message.startsWith(\u005c'ACCEPTED\u005c')}"><div '+'ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.uid" '+'class="ui-grid-cell" '+'ng-class="{ \u005c'ui-grid-row-header-cell\u005c': col.isRowHeader }"  ui-grid-cell>'+'</div></div>';$scope.gridOptions={data:[],enableSorting:true,rowHeight:20,columnDefs:[{field:'timestamp',name:'Time',cellFilter:'date',enableSorting:true,width:120},{field:'log_level',name:'Level',enableSorting:false,width:65},{field:'plugin',name:'Plugin',enableSorting:false,width:80,cellTooltip:true},{field:'task',name:'Task',enableSorting:false,width:65,cellTooltip:true},{field:'message',name:'Message',enableSorting:false,minWidth:400,cellTooltip:true}],rowTemplate:rowTemplate,onRegisterApi:function(gridApi){$scope.gridApi=gridApi;getLogData();}};$scope.$on("$destroy",function(){abort();});});})();(function(){'use strict';var module=angular.module('ui.grid.autoScroll',['ui.grid']);module.service('uiGridAutoScrollService',['uiGridConstants','$timeout',function(uiGridConstants,$timeout){var service={initializeGrid:function(grid,$scope){service.defaultGridOptions(grid.options);if(!grid.options.enableAutoScroll){return;}\u000agrid.autoScroll={prevScrollPercent:1};grid.api.core.on.scrollEnd($scope,service.handleScroll);grid.registerDataChangeCallback(service.autoScroll,[uiGridConstants.dataChange.ROW]);},defaultGridOptions:function(gridOptions){gridOptions.enableAutoScroll=gridOptions.enableAutoScroll!==false;},handleScroll:function(args){if(args.y){args.grid.autoScroll.prevScrollPercent=args.y.percentage;}},autoScroll:function(args){if(angular.isDefined(args.api.grid.autoScroll.scrollTimeout)){$timeout.cancel(args.api.grid.autoScroll.scrollTimeout);args.api.core.scrollTo(args.api.grid.options.data[args.api.grid.options.data.length-1]);}\u000aargs.api.grid.autoScroll.scrollTimeout=$timeout(function(){if(args.api.grid.autoScroll.prevScrollPercent>0.98){args.api.core.scrollTo(args.api.grid.options.data[args.api.grid.options.data.length-1]);}},50);}};return service;}]);module.directive('uiGridAutoScroll',['uiGridAutoScrollService',function(uiGridAutoScrollService){return{scope:false,require:'^uiGrid',compile:function($scope,$elm,$attr){return{pre:function($scope,$elm,$attr,uiGridCtrl){uiGridAutoScrollService.initializeGrid(uiGridCtrl.grid,$scope);},post:function($scope,$elm,$attr){}};}};}]);})();(function(){'use strict';var authentication=angular.module('authentication',['flexget.services']);registerModule(authentication);authentication.run(function($rootScope,$state,$http,route,toolBar){route.register('login','/login?timeout','LoginController','plugin/authentication/static/login.html');$rootScope.$on('event:auth-loginRequired',function(event,timeout){$state.go('login',{'timeout':timeout});});var logout=function(){$http.get('/api/logout/').success(function(){$state.go('login');});};toolBar.registerMenuItem('Manage','Logout','fa fa-sign-out',logout,255);});authentication.controller('LoginController',function($scope,$http,$mdDialog,$state,$stateParams,authService){$scope.timeout=$stateParams.timeout;$scope.remember=false;$scope.error='';$scope.credentials={username:'',password:''};$scope.login=function(){authService.login($scope.credentials.username,$scope.credentials.password,$scope.remember).error(function(data){$scope.credentials.password='';if('message'in data){$scope.error=data.message;}else{$scope.error='Error during authentication';}});};});})();
p1
.